# PRODUCT (RELEASE) INFO
product_name = "Dummy Product"
product_short = "DP"
product_version = "1.0"
product_is_layered = False
product_type = "ga"


# GENERAL SETTINGS
bootable = False
comps_file = "dummy-comps.xml"
variants_file = "dummy-variants.xml"
sigkeys = [None] # None = unsigned

# limit tree architectures
# if undefined, all architectures from variants.xml will be included
atree_arches = ["x86_64"]

# limit tree variants
# if undefined, all variants from variants.xml will be included
#tree_variants = ["Server"]

multilib_arches = ["ppc64", "x86_64", "s390x"]
multilib_methods = ["devel", "runtime"] # devel (recommended), all, base, file, kernel, none, runtime


# RUNROOT settings
runroot = False
#runroot_channel = ""
#runroot_tag = ""


# PKGSET
pkgset_source = "repos" # koji, repos

# PKGSET - REPOS
# pkgset_repos format: {arch: [repo1_url, repo2_url, ...]}
pkgset_repos = {
    "i386": [
        "repo",
    ],
    "x86_64": [
        "repo",
    ],
    "s390x": [
        "repo",
    ],
}

# PKGSET - KOJI
#pkgset_koji_path_prefix = "/mnt/koji"
#pkgset_koji_url = ""
#pkgset_koji_tag = ""


# GATHER
gather_source = "comps"
gather_method = "deps"
check_deps = False
greedy_method = "build"

# fomat: [(variant_uid_regex, {arch|*: [repos]})]
# gather_lookaside_repos = []

# GATHER - JSON
# format: {variant_uid: {arch: package: [arch1, arch2, None (for any arch)]}}
#gather_source_mapping = "/path/to/mapping.json"


# CREATEREPO
createrepo_checksum = "sha256"


# BUILDINSTALL


# PRODUCTIMG


# CREATEISO
create_optional_isos = False
symlink_isos_to = None


# fomat: [(variant_uid_regex, {arch|*: [packages]})]
additional_packages = [
    ('^Server$', {
        '*': [
#            'dummy-lvm2-devel',
             'dummy-libtool',
        ],
    }),
    ('^Client-optional$', {
        '*': [
            'dummy-httpd',
        ],
    }),
]

filter_packages = [
    ('^.*$', {
        '*': [
            'dummy-pacemaker',
        ],
    }),
    ('^Client$', {
        '*': [
            'dummy-httpd',
        ],
    }),
    ('^Server-optional$', {
        '*': [
            'dummy-httpd.i686',
        ],
    }),
    ('^.*-ResilientStorage$', {
        '*': [
            'dummy-glusterfs-resource-agents',
        ],
    }),
]


# format: {arch|*: [packages]}
multilib_blacklist = {
    "*": [
        "kernel-devel",
        "httpd-devel",
        "*",
#        "dummy-glibc",
    ],
}

multilib_whitelist = {
    "*": [
        "dummy-glibc",
    ],
}
